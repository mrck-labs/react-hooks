{
    "compilerOptions": {
        /* Language and Environment */
        "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "lib": [
            "es6",
            "dom"
        ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
        "jsx": "react" /* Specify what JSX code is generated. */,

        /* Modules */
        "module": "es2020" /* Specify what module code is generated. */,
        //    "rootDir": ".",                                  /* Specify the root folder within your source files. */
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "baseUrl": ".",
        /* Specify the base directory to resolve non-relative module names. */
        "paths": {
            "@/src/*": ["./src/*"]
        },
        /* Specify a set of entries that re-map imports to additional lookup locations. */
        // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
        // "typeRoots": [],                                  /* Specify multiple folders that act like `./node_modules/@types`. */
        // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */
        // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
        "resolveJsonModule": true /* Enable importing .json files */,
        // "noResolve": true,                                /* Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. */

        /* Emit */
        "sourceMap": false /* Create source map files for emitted JavaScript files. */,
        "outDir": "./dist" /* Specify an output folder for all emitted files. */,
        "removeComments": false /* Disable emitting comments. */,
        "allowJs": true,

        /* Interop Constraints */
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": false /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
        "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
        "skipLibCheck": false /* Skip type checking all .d.ts files. */,
        "declaration": false,
        "exactOptionalPropertyTypes": false
    },
    "exclude": ["node_modules", "./dist/*/**"],
    "include": ["./src/**/*.ts", "./src/**/*.tsx"]
}
